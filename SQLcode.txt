/*
  Code written in Oracle APEX for faculty project
  Subject: Practicum of Databases
  Note: All variable, table and other names are written in my native language 
*/

--Creating tables and constraints

CREATE TABLE klijenti(
    sifra NUMBER(8) PRIMARY KEY,
    naziv VARCHAR2(40) NOT NULL,
    legitimacija VARCHAR2(12) NOT NULL
);

CREATE TABLE odseci(
    sifra NUMBER(8) PRIMARY KEY,
    naziv VARCHAR2(15) NOT NULL,
    broj_zaposlenih NUMBER(38) NOT NULL,
    broj_telefona VARCHAR2(10) NOT NULL,
    opis_delatnosti VARCHAR2(20) NULL
);
CREATE TABLE radna_mesta(
    id NUMBER(8) PRIMARY KEY,
    naziv VARCHAR2(45) NOT NULL,
    broj_radnika NUMBER(15) NOT NULL,
    cena_po_satu NUMBER(15) NOT NULL,
    id_odseka NUMBER(8),
    br_mesta NUMBER(8),
    CONSTRAINT id_odsek_fk FOREIGN KEY(id_odseka)
    REFERENCES odseci(sifra)
);

ALTER TABLE radna_mesta
ADD CHECK (broj_radnika <= br_mesta);

CREATE TABLE radnici(
    id NUMBER(8) PRIMARY KEY,
    radno_mesto NUMBER(8) NOT NULL,
    ime VARCHAR2(10) NOT NULL,
    prezime VARCHAR2(10) NOT NULL,
    jmbg NUMBER(13) NOT NULL,
    broj_licne_karte NUMBER(9) NOT NULL,
    strucna_sprema VARCHAR2(20) NOT NULL,
    br_sati NUMBER(8) NOT NULL,
    napomena VARCHAR2(15) NULL,
    id_rukovodioca NUMBER(8) NOT NULL,
    CONSTRAINT id_rm_fk FOREIGN KEY(radno_mesto)
    REFERENCES radna_mesta(id),
    CONSTRAINT id_ruk_fk FOREIGN KEY(id_rukovodioca) 
    REFERENCES radnici(id)
);


CREATE TABLE jedinice_mere(
    oznaka VARCHAR2(10) PRIMARY KEY,
    naziv VARCHAR(15) NOT NULL
);

CREATE TABLE materijali(
    sifra NUMBER(8) PRIMARY KEY,
    jedinica_mere VARCHAR2(10) NOT NULL,
    naziv VARCHAR(15) NOT NULL,
    kolicina VARCHAR(10) NOT NULL,
    CONSTRAINT jm_m_fk FOREIGN KEY(jedinica_mere)
    REFERENCES jedinice_mere(oznaka)
);
CREATE TABLE proizvodi(
    sifra NUMBER(8) PRIMARY KEY,
    jedinica_mere VARCHAR2(10) NOT NULL,
    naziv VARCHAR2(25) NOT NULL,
    kolicina NUMBER(10) NOT NULL,
    cena NUMBER(15) NULL,
    boja VARCHAR2(15) NULL,
    sirina VARCHAR2(15) NULL,
    visina VARCHAR2(15) NULL,
    opis VARCHAR2(45) NULL,
    CONSTRAINT jm_p_fk FOREIGN KEY(jedinica_mere)
    REFERENCES jedinice_mere(oznaka)
);

CREATE TABLE utrosci (
    kolicina VARCHAR2(15) NOT NULL,
    id_odseka NUMBER(8) NOT NULL,
    id_materijala NUMBER(8) NOT NULL,
    id_proizvoda NUMBER(8) NOT NULL,
    jedinica_mere VARCHAR2(10) NOT NULL,
    CONSTRAINT u_pk PRIMARY KEY(id_odseka, id_materijala, id_proizvoda),
    CONSTRAINT jm_u_fk FOREIGN KEY(jedinica_mere)
    REFERENCES jedinice_mere(oznaka),
    CONSTRAINT id_m_fk FOREIGN KEY(id_materijala)
    REFERENCES materijali(sifra),
    CONSTRAINT id_pr_fk FOREIGN KEY(id_proizvoda)
    REFERENCES proizvodi(sifra),
    CONSTRAINT id_od_fk FOREIGN KEY(id_odseka)
    REFERENCES odseci(sifra)  
);

CREATE TABLE prodaje(
    datum DATE NOT NULL,
    broj_racuna VARCHAR2(8) NOT NULL,
    id_radnika NUMBER(8) NOT NULL,
    id_klijenta NUMBER(8) NOT NULL,
    id_proizvoda NUMBER(8) NOT NULL,
    naziv_proizvoda varchar2(40) NOT NULL,
    kolicina NUMBER(8) NOT NULL,
    ukupno NUMBER(15) NULL,
    popust NUMBER(1) DEFAULT 0,
    CONSTRAINT id_p_pk PRIMARY KEY(datum,id_radnika,id_klijenta,id_proizvoda),
    CONSTRAINT id_r_p_fk FOREIGN KEY(id_radnika)
    REFERENCES radnici(id),
    CONSTRAINT id_kl_p_fk FOREIGN KEY(id_klijenta)
    REFERENCES klijenti(sifra),
    CONSTRAINT id_pr_p_fk FOREIGN KEY(id_proizvoda)
    REFERENCES proizvodi(sifra)
);


--Triggers and test code

CREATE OR REPLACE TRIGGER d2nf_update_naziv
AFTER UPDATE OF naziv ON proizvodi
FOR EACH ROW
DECLARE PRAGMA AUTONOMOUS_TRANSACTION;
BEGIN
EXECUTE IMMEDIATE 'ALTER TRIGGER d2nf_prodaje_insert_update DISABLE';
EXECUTE IMMEDIATE 'ALTER TRIGGER d2nf_prodaje_update_naziv DISABLE';
UPDATE prodaje
SET naziv_proizvoda = :NEW.naziv
WHERE id_proizvoda = :NEW.sifra;
EXECUTE IMMEDIATE 'ALTER TRIGGER d2nf_prodaje_insert_update ENABLE';
EXECUTE IMMEDIATE 'ALTER TRIGGER d2nf_prodaje_update_naziv ENABLE';
END;


CREATE OR REPLACE TRIGGER d2nf_prodaje_insert_update
BEFORE
INSERT OR UPDATE ON prodaje
FOR EACH ROW 
DECLARE novi_naziv_proizvoda VARCHAR2(25);
BEGIN 
SELECT naziv
INTO novi_naziv_proizvoda
FROM proizvodi
WHERE sifra = :NEW.id_proizvoda;
:NEW.naziv_proizvoda := novi_naziv_proizvoda;
END;


CREATE OR REPLACE TRIGGER d2nf_prodaje_update_naziv
BEFORE 
UPDATE OF naziv_proizvoda ON prodaje
FOR EACH ROW
BEGIN
RAISE_APPLICATION_ERROR(NUM => -20002,
MSG => 'Naziv proizvoda se ne moze menjati!');
END;


/*
  Trigger testing
*/

--Test example for trigger one
UPDATE PROIZVODI
SET naziv = 'balkon vrata'
WHERE naziv = 'balkonska vrata';

INSERT INTO prodaje VALUES('1/15/2021','12021115',1125,6,5,'N/A')

--Test example for trigger two
UPDATE PRODAJE
SET naziv_proizvoda = 'balkon vrata'
WHERE naziv_proizvoda = 'balkonska vrata';

SELECT * FROM prodaje

SELECT * FROM proizvodi

--Test example for trigger three
SELECT * FROM radnici 
WHERE radno_mesto = 8;

SELECT * FROM klijenti


